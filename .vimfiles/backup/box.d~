module sbylib.primitive.Box;

import sbylib;

class Box : Primitive {
	private static{
		uint[][] indices;
		vec3[] vertices;
	}

	static this() {
		// TODO: change here to TRIANGLE_STRIP
		uint[][] indices = [
			[2,3,1,0], //奥
			[4,5,7,6], //手前
			[6,7,3,2], //上
			[0,1,5,4], //下
			[1,3,7,5], //左
			[4,6,2,0]  //右
		];
		vec3[] vertex = [
			vec3(-1,-1,-1),
			vec3(+1,-1,-1),
			vec3(-1,+1,-1),
			vec3(+1,+1,-1),
			vec3(-1,-1,1),
			vec3(+1,-1,1),
			vec3(-1,+1,1),
			vec3(+1,+1,1)
		];
		Box.indices = indices;
		Box.vertices = vertex;
	}

	this(Material mat = null)  {
		if (mat is null) mat = new Material;
		super(Box.vertices, Box.indices, mat, ShaderStore.getShader("NormalGenerate"));
		
		custom.addDynamicUniformMatrix!(4, "mWorld")({return getWorldMatrix.array;});
		custom.addDynamicUniformMatrix!(4, "mViewProj")({return SbyWorld.currentCamera.getViewProjectionMatrix.array;});
	}

	override bool draw() {
		custom.draw();
		return true;
	}

	static vec3[] getVertices() {
		return vertices.dup;
	}

	static uint[][] getIndices() {
		return indices.dup;
	}

}