module sbylib.entity.EntityManager;

import sbylib;

/*
Entityを実装するものを管理します。
Singletonなので、getInstanceを経由して使用します。

stepAllは使用しないでください。
*/

private class TemptationStepper : Entity {
	private bool delegate() func;
	this(bool delegate() func) {
		this.func = func;
	}

	override bool step() {
		return func();
	}

	override string toString() {
		return "Template";
	}
}

class EntityManager {
	private static EntityManager instance;
	private this(){}
	public static EntityManager getInstance() {return instance ? instance : (instance = new EntityManager);}

	private static LinkList!(Entity)[100] entityList;

public static:
void step(uint i) {
	auto it = entityList[i].iterator;
	while (it.hasNext) {
		auto next = it.next;
		if (next.step == false)
			it.remove;
	}
	}

	uint maxPriority() {
		return entityList.length;
	}

	void add(Entity entity, uint priority = 50) in {
		assert(0 <= priority && priority < entityList.length, "Specified Priority " ~ to!string(priority) ~ " Is Out Of Range. Max Priority is " ~ to!string(entityList.length-1));
	} body{
		entityList[priority].push(entity);
	}

	void add(bool delegate() step, uint priority = 50) {
		add(new TemptationStepper(step), priority);
	}
}
