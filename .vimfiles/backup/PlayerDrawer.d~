module player.PlayerDrawer;

import sbylib;
import player;

class PlayerDrawer : Drawable {

  CustomObject delegate() getCustomObject;
  void delegate(vec3[]) nextVertices;
  void delegate(vec3[]) nextNormals;

  private vec3[] vertices;
  private vec3[] normals;
  private float[] vertexArray;
  private float[] normalArray;
  private int _vertexNum;
  private int _normalNum;

  void vertexNum(int vNum) @property {
    if (vNum < _vertexNum) {
      _vertexNum = vNum;
      return;
    }
    this.vertices.length = vNum;
    this.vertexArray.length = vNum  * 3;
    this._vertexNum = vNum;
  }

  void normalNum(int nNum) @property {
    if (nNum < _normalNum) {
      _normalNum = nNum;
      return;
    }
    this.normals.length = nNum;
    this.normalArray.length = nNum * 3;
    this._normalNum = nNum;
  }

  override bool draw() {
    auto custom = getCustomObject();
    custom.draw();

    nextVertices(vertices);
    foreach (i; 0.._vertexNum) {
      vertexArray[i*3..i*3+3] = vertices[i].array;
    }
    custom.update("mVertex", vertexArray);

    nextNormals(normals);
    foreach (i; 0.._normalNum) {
      normalArray[i*3..i*3+3] = normals[i].array;
    }
    custom.update("mNormal", normalArray);

    return true;
  }

}
